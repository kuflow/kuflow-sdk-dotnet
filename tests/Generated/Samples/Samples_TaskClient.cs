// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Kuflow.Rest.Samples
{
  public class Samples_TaskClient
  {
    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_FindTasks()
    {
      var client = new TaskClient();

      Response response = client.FindTasks();

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_FindTasks_AllParameters()
    {
      var client = new TaskClient();

      Response response = client.FindTasks(
        1234,
        1234,
        new string[] { "<sort>" },
        new Guid[] { Guid.NewGuid() },
        new string[] { "<state>" },
        new string[] { "<taskDefinitionCode>" },
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("version").ToString()
      );
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("processId").ToString());
      Console.WriteLine(
        result
          .GetProperty("content")[0]
          .GetProperty("elementValues")
          .GetProperty("<test>")[0]
          .GetProperty("valid")
          .ToString()
      );
      Console.WriteLine(
        result
          .GetProperty("content")[0]
          .GetProperty("elementValues")
          .GetProperty("<test>")[0]
          .GetProperty("type")
          .ToString()
      );
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("owner").GetProperty("user").GetProperty("id").ToString()
      );
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("owner").GetProperty("user").GetProperty("email").ToString()
      );
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("owner").GetProperty("application").GetProperty("id").ToString()
      );
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedAt").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_FindTasks_Async()
    {
      var client = new TaskClient();

      Response response = await client.FindTasksAsync();

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_FindTasks_AllParameters_Async()
    {
      var client = new TaskClient();

      Response response = await client.FindTasksAsync(
        1234,
        1234,
        new string[] { "<sort>" },
        new Guid[] { Guid.NewGuid() },
        new string[] { "<state>" },
        new string[] { "<taskDefinitionCode>" },
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("version").ToString()
      );
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("processId").ToString());
      Console.WriteLine(
        result
          .GetProperty("content")[0]
          .GetProperty("elementValues")
          .GetProperty("<test>")[0]
          .GetProperty("valid")
          .ToString()
      );
      Console.WriteLine(
        result
          .GetProperty("content")[0]
          .GetProperty("elementValues")
          .GetProperty("<test>")[0]
          .GetProperty("type")
          .ToString()
      );
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("owner").GetProperty("user").GetProperty("id").ToString()
      );
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("owner").GetProperty("user").GetProperty("email").ToString()
      );
      Console.WriteLine(
        result.GetProperty("content")[0].GetProperty("owner").GetProperty("application").GetProperty("id").ToString()
      );
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedAt").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
      Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_CreateTask()
    {
      var client = new TaskClient();

      var data = new
      {
        taskDefinition = new { },
        processId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        objectType = "Task",
      };

      Response response = client.CreateTask(RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_CreateTask_AllParameters()
    {
      var client = new TaskClient();

      var data = new
      {
        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        state = "READY",
        taskDefinition = new
        {
          id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
          version = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
          code = "<code>",
          name = "<name>",
        },
        processId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        elementValues = new
        {
          key = new[]
          {
            new
            {
              value = "<value>",
              valid = true,
              type = "STRING",
            }
          },
        },
        logs = new[]
        {
          new
          {
            id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
            createdAt = "2022-05-10T18:57:31.2311892Z",
            message = "<message>",
            level = "INFO",
          }
        },
        owner = new
        {
          id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
          type = "USER",
          name = "<name>",
          user = new { id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", email = "<email>", },
          application = new { id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", },
        },
        objectType = "Task",
        createdBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        createdAt = "2022-05-10T18:57:31.2311892Z",
        lastModifiedBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        lastModifiedAt = "2022-05-10T18:57:31.2311892Z",
      };

      Response response = client.CreateTask(RequestContent.Create(data), "<activityToken>", new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_CreateTask_Async()
    {
      var client = new TaskClient();

      var data = new
      {
        taskDefinition = new { },
        processId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        objectType = "Task",
      };

      Response response = await client.CreateTaskAsync(RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_CreateTask_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = new
      {
        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        state = "READY",
        taskDefinition = new
        {
          id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
          version = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
          code = "<code>",
          name = "<name>",
        },
        processId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        elementValues = new
        {
          key = new[]
          {
            new
            {
              value = "<value>",
              valid = true,
              type = "STRING",
            }
          },
        },
        logs = new[]
        {
          new
          {
            id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
            createdAt = "2022-05-10T18:57:31.2311892Z",
            message = "<message>",
            level = "INFO",
          }
        },
        owner = new
        {
          id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
          type = "USER",
          name = "<name>",
          user = new { id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", email = "<email>", },
          application = new { id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", },
        },
        objectType = "Task",
        createdBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        createdAt = "2022-05-10T18:57:31.2311892Z",
        lastModifiedBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        lastModifiedAt = "2022-05-10T18:57:31.2311892Z",
      };

      Response response = await client.CreateTaskAsync(
        RequestContent.Create(data),
        "<activityToken>",
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_RetrieveTask()
    {
      var client = new TaskClient();

      Response response = client.RetrieveTask(Guid.NewGuid());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_RetrieveTask_AllParameters()
    {
      var client = new TaskClient();

      Response response = client.RetrieveTask(Guid.NewGuid(), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_RetrieveTask_Async()
    {
      var client = new TaskClient();

      Response response = await client.RetrieveTaskAsync(Guid.NewGuid());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_RetrieveTask_AllParameters_Async()
    {
      var client = new TaskClient();

      Response response = await client.RetrieveTaskAsync(Guid.NewGuid(), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskClaim()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskClaim(Guid.NewGuid());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskClaim_AllParameters()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskClaim(Guid.NewGuid(), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskClaim_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskClaimAsync(Guid.NewGuid());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskClaim_AllParameters_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskClaimAsync(Guid.NewGuid(), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskAssign()
    {
      var client = new TaskClient();

      var data = new { };

      Response response = client.ActionsTaskAssign(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskAssign_AllParameters()
    {
      var client = new TaskClient();

      var data = new { principalId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", email = "<email>", };

      Response response = client.ActionsTaskAssign(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskAssign_Async()
    {
      var client = new TaskClient();

      var data = new { };

      Response response = await client.ActionsTaskAssignAsync(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskAssign_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = new { principalId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", email = "<email>", };

      Response response = await client.ActionsTaskAssignAsync(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskSaveElement()
    {
      var client = new TaskClient();

      var data = new { elementDefinitionCode = "<elementDefinitionCode>", };

      Response response = client.ActionsTaskSaveElement(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskSaveElement_AllParameters()
    {
      var client = new TaskClient();

      var data = new
      {
        elementDefinitionCode = "<elementDefinitionCode>",
        elementValues = new[]
        {
          new
          {
            value = "<value>",
            valid = true,
            type = "STRING",
          }
        },
      };

      Response response = client.ActionsTaskSaveElement(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskSaveElement_Async()
    {
      var client = new TaskClient();

      var data = new { elementDefinitionCode = "<elementDefinitionCode>", };

      Response response = await client.ActionsTaskSaveElementAsync(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskSaveElement_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = new
      {
        elementDefinitionCode = "<elementDefinitionCode>",
        elementValues = new[]
        {
          new
          {
            value = "<value>",
            valid = true,
            type = "STRING",
          }
        },
      };

      Response response = await client.ActionsTaskSaveElementAsync(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskSaveElementValueDocument()
    {
      var client = new TaskClient();

      var data = File.OpenRead("<filePath>");

      Response response = client.ActionsTaskSaveElementValueDocument(
        Guid.NewGuid(),
        "<fileContentType>",
        "<fileName>",
        "<elementDefinitionCode>",
        RequestContent.Create(data)
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskSaveElementValueDocument_AllParameters()
    {
      var client = new TaskClient();

      var data = File.OpenRead("<filePath>");

      Response response = client.ActionsTaskSaveElementValueDocument(
        Guid.NewGuid(),
        "<fileContentType>",
        "<fileName>",
        "<elementDefinitionCode>",
        RequestContent.Create(data),
        Guid.NewGuid(),
        true,
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskSaveElementValueDocument_Async()
    {
      var client = new TaskClient();

      var data = File.OpenRead("<filePath>");

      Response response = await client.ActionsTaskSaveElementValueDocumentAsync(
        Guid.NewGuid(),
        "<fileContentType>",
        "<fileName>",
        "<elementDefinitionCode>",
        RequestContent.Create(data)
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskSaveElementValueDocument_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = File.OpenRead("<filePath>");

      Response response = await client.ActionsTaskSaveElementValueDocumentAsync(
        Guid.NewGuid(),
        "<fileContentType>",
        "<fileName>",
        "<elementDefinitionCode>",
        RequestContent.Create(data),
        Guid.NewGuid(),
        true,
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDeleteElement()
    {
      var client = new TaskClient();

      var data = new { elementDefinitionCode = "<elementDefinitionCode>", };

      Response response = client.ActionsTaskDeleteElement(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDeleteElement_AllParameters()
    {
      var client = new TaskClient();

      var data = new { elementDefinitionCode = "<elementDefinitionCode>", };

      Response response = client.ActionsTaskDeleteElement(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDeleteElement_Async()
    {
      var client = new TaskClient();

      var data = new { elementDefinitionCode = "<elementDefinitionCode>", };

      Response response = await client.ActionsTaskDeleteElementAsync(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDeleteElement_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = new { elementDefinitionCode = "<elementDefinitionCode>", };

      Response response = await client.ActionsTaskDeleteElementAsync(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDeleteElementValueDocument()
    {
      var client = new TaskClient();

      var data = new { documentId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", };

      Response response = client.ActionsTaskDeleteElementValueDocument(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDeleteElementValueDocument_AllParameters()
    {
      var client = new TaskClient();

      var data = new { documentId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", };

      Response response = client.ActionsTaskDeleteElementValueDocument(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDeleteElementValueDocument_Async()
    {
      var client = new TaskClient();

      var data = new { documentId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", };

      Response response = await client.ActionsTaskDeleteElementValueDocumentAsync(
        Guid.NewGuid(),
        RequestContent.Create(data)
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDeleteElementValueDocument_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = new { documentId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a", };

      Response response = await client.ActionsTaskDeleteElementValueDocumentAsync(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDownloadElementValueDocument()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskDownloadElementValueDocument(Guid.NewGuid(), Guid.NewGuid());
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDownloadElementValueDocument_AllParameters()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskDownloadElementValueDocument(
        Guid.NewGuid(),
        Guid.NewGuid(),
        new RequestContext()
      );
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDownloadElementValueDocument_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskDownloadElementValueDocumentAsync(Guid.NewGuid(), Guid.NewGuid());
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDownloadElementValueDocument_AllParameters_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskDownloadElementValueDocumentAsync(
        Guid.NewGuid(),
        Guid.NewGuid(),
        new RequestContext()
      );
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDownloadElementValueRendered()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskDownloadElementValueRendered(Guid.NewGuid(), "<elementDefinitionCode>");
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskDownloadElementValueRendered_AllParameters()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskDownloadElementValueRendered(
        Guid.NewGuid(),
        "<elementDefinitionCode>",
        new RequestContext()
      );
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDownloadElementValueRendered_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskDownloadElementValueRenderedAsync(
        Guid.NewGuid(),
        "<elementDefinitionCode>"
      );
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskDownloadElementValueRendered_AllParameters_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskDownloadElementValueRenderedAsync(
        Guid.NewGuid(),
        "<elementDefinitionCode>",
        new RequestContext()
      );
      if (response.ContentStream != null)
      {
        using (Stream outFileStream = File.OpenWrite("<filePath>"))
        {
          response.ContentStream.CopyTo(outFileStream);
        }
      }
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskComplete()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskComplete(Guid.NewGuid());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskComplete_AllParameters()
    {
      var client = new TaskClient();

      Response response = client.ActionsTaskComplete(Guid.NewGuid(), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskComplete_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskCompleteAsync(Guid.NewGuid());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskComplete_AllParameters_Async()
    {
      var client = new TaskClient();

      Response response = await client.ActionsTaskCompleteAsync(Guid.NewGuid(), new RequestContext());

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskAppendLog()
    {
      var client = new TaskClient();

      var data = new { message = "<message>", level = "INFO", };

      Response response = client.ActionsTaskAppendLog(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public void Example_ActionsTaskAppendLog_AllParameters()
    {
      var client = new TaskClient();

      var data = new
      {
        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        createdAt = "2022-05-10T18:57:31.2311892Z",
        message = "<message>",
        level = "INFO",
      };

      Response response = client.ActionsTaskAppendLog(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskAppendLog_Async()
    {
      var client = new TaskClient();

      var data = new { message = "<message>", level = "INFO", };

      Response response = await client.ActionsTaskAppendLogAsync(Guid.NewGuid(), RequestContent.Create(data));

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("taskDefinition").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
    }

    [Test]
    [Ignore("Only validating compilation of examples")]
    public async Task Example_ActionsTaskAppendLog_AllParameters_Async()
    {
      var client = new TaskClient();

      var data = new
      {
        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
        createdAt = "2022-05-10T18:57:31.2311892Z",
        message = "<message>",
        level = "INFO",
      };

      Response response = await client.ActionsTaskAppendLogAsync(
        Guid.NewGuid(),
        RequestContent.Create(data),
        new RequestContext()
      );

      JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
      Console.WriteLine(result.GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("state").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("version").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("code").ToString());
      Console.WriteLine(result.GetProperty("taskDefinition").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("processId").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
      Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("message").ToString());
      Console.WriteLine(result.GetProperty("logs")[0].GetProperty("level").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("type").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("name").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("user").GetProperty("email").ToString());
      Console.WriteLine(result.GetProperty("owner").GetProperty("application").GetProperty("id").ToString());
      Console.WriteLine(result.GetProperty("objectType").ToString());
      Console.WriteLine(result.GetProperty("createdBy").ToString());
      Console.WriteLine(result.GetProperty("createdAt").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
      Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
    }
  }
}
