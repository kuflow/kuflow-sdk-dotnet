// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Kuflow.Rest.Samples
{
    public class Samples_ProcessClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FindProcesses()
        {
            var client = new ProcessClient();

            Response response = client.FindProcesses();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FindProcesses_AllParameters()
        {
            var client = new ProcessClient();

            Response response = client.FindProcesses(1234, 1234, new string[] { "<sort>" }, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FindProcesses_Async()
        {
            var client = new ProcessClient();

            Response response = await client.FindProcessesAsync();

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FindProcesses_AllParameters_Async()
        {
            var client = new ProcessClient();

            Response response = await client.FindProcessesAsync(1234, 1234, new string[] { "<sort>" }, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("content")[0].GetProperty("lastModifiedAt").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("size").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("page").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalElements").ToString());
            Console.WriteLine(result.GetProperty("metadata").GetProperty("totalPages").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateProcess()
        {
            var client = new ProcessClient();

            var data = new
            {
                processDefinition = new
                {
                    id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                },
                objectType = "Process",
            };

            Response response = client.CreateProcess(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateProcess_AllParameters()
        {
            var client = new ProcessClient();

            var data = new
            {
                id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                subject = "<subject>",
                state = "RUNNING",
                processDefinition = new
                {
                    id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    version = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    name = "<name>",
                },
                elementValues = new
                {
                    key = new[] {
            new {
                value = "<value>",
                valid = true,
                type = "STRING",
            }
        },
                },
                initiator = new
                {
                    id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    type = "USER",
                    name = "<name>",
                    user = new
                    {
                        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                        email = "<email>",
                    },
                    application = new
                    {
                        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    },
                },
                relatedProcess = new
                {
                    incoming = new[] {
            "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
        },
                    outcoming = new[] {
            "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
        },
                },
                objectType = "Process",
                createdBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                createdAt = "2022-05-10T18:57:31.2311892Z",
                lastModifiedBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                lastModifiedAt = "2022-05-10T18:57:31.2311892Z",
            };

            Response response = client.CreateProcess(RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateProcess_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                processDefinition = new
                {
                    id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                },
                objectType = "Process",
            };

            Response response = await client.CreateProcessAsync(RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateProcess_AllParameters_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                subject = "<subject>",
                state = "RUNNING",
                processDefinition = new
                {
                    id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    version = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    name = "<name>",
                },
                elementValues = new
                {
                    key = new[] {
            new {
                value = "<value>",
                valid = true,
                type = "STRING",
            }
        },
                },
                initiator = new
                {
                    id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    type = "USER",
                    name = "<name>",
                    user = new
                    {
                        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                        email = "<email>",
                    },
                    application = new
                    {
                        id = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                    },
                },
                relatedProcess = new
                {
                    incoming = new[] {
            "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
        },
                    outcoming = new[] {
            "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"
        },
                },
                objectType = "Process",
                createdBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                createdAt = "2022-05-10T18:57:31.2311892Z",
                lastModifiedBy = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                lastModifiedAt = "2022-05-10T18:57:31.2311892Z",
            };

            Response response = await client.CreateProcessAsync(RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RetrieveProcess()
        {
            var client = new ProcessClient();

            Response response = client.RetrieveProcess(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_RetrieveProcess_AllParameters()
        {
            var client = new ProcessClient();

            Response response = client.RetrieveProcess(Guid.NewGuid(), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RetrieveProcess_Async()
        {
            var client = new ProcessClient();

            Response response = await client.RetrieveProcessAsync(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_RetrieveProcess_AllParameters_Async()
        {
            var client = new ProcessClient();

            Response response = await client.RetrieveProcessAsync(Guid.NewGuid(), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessChangeInitiator()
        {
            var client = new ProcessClient();

            var data = new { };

            Response response = client.ActionsProcessChangeInitiator(Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessChangeInitiator_AllParameters()
        {
            var client = new ProcessClient();

            var data = new
            {
                principalId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                email = "<email>",
            };

            Response response = client.ActionsProcessChangeInitiator(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessChangeInitiator_Async()
        {
            var client = new ProcessClient();

            var data = new { };

            Response response = await client.ActionsProcessChangeInitiatorAsync(Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessChangeInitiator_AllParameters_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                principalId = "73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a",
                email = "<email>",
            };

            Response response = await client.ActionsProcessChangeInitiatorAsync(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessSaveElement()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
            };

            Response response = client.ActionsProcessSaveElement(Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessSaveElement_AllParameters()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
                elementValues = new[] {
        new {
            value = "<value>",
            valid = true,
            type = "STRING",
        }
    },
            };

            Response response = client.ActionsProcessSaveElement(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessSaveElement_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
            };

            Response response = await client.ActionsProcessSaveElementAsync(Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessSaveElement_AllParameters_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
                elementValues = new[] {
        new {
            value = "<value>",
            valid = true,
            type = "STRING",
        }
    },
            };

            Response response = await client.ActionsProcessSaveElementAsync(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessDeleteElement()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
            };

            Response response = client.ActionsProcessDeleteElement(Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessDeleteElement_AllParameters()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
            };

            Response response = client.ActionsProcessDeleteElement(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessDeleteElement_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
            };

            Response response = await client.ActionsProcessDeleteElementAsync(Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessDeleteElement_AllParameters_Async()
        {
            var client = new ProcessClient();

            var data = new
            {
                elementDefinitionCode = "<elementDefinitionCode>",
            };

            Response response = await client.ActionsProcessDeleteElementAsync(Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessComplete()
        {
            var client = new ProcessClient();

            Response response = client.ActionsProcessComplete(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessComplete_AllParameters()
        {
            var client = new ProcessClient();

            Response response = client.ActionsProcessComplete(Guid.NewGuid(), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessComplete_Async()
        {
            var client = new ProcessClient();

            Response response = await client.ActionsProcessCompleteAsync(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessComplete_AllParameters_Async()
        {
            var client = new ProcessClient();

            Response response = await client.ActionsProcessCompleteAsync(Guid.NewGuid(), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessCancel()
        {
            var client = new ProcessClient();

            Response response = client.ActionsProcessCancel(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessCancel_AllParameters()
        {
            var client = new ProcessClient();

            Response response = client.ActionsProcessCancel(Guid.NewGuid(), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessCancel_Async()
        {
            var client = new ProcessClient();

            Response response = await client.ActionsProcessCancelAsync(Guid.NewGuid());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessCancel_AllParameters_Async()
        {
            var client = new ProcessClient();

            Response response = await client.ActionsProcessCancelAsync(Guid.NewGuid(), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessSaveUserActionValueDocument()
        {
            var client = new ProcessClient();

            var data = File.OpenRead("<filePath>");

            Response response = client.ActionsProcessSaveUserActionValueDocument(Guid.NewGuid(), "<fileContentType>", "<fileName>", Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ActionsProcessSaveUserActionValueDocument_AllParameters()
        {
            var client = new ProcessClient();

            var data = File.OpenRead("<filePath>");

            Response response = client.ActionsProcessSaveUserActionValueDocument(Guid.NewGuid(), "<fileContentType>", "<fileName>", Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessSaveUserActionValueDocument_Async()
        {
            var client = new ProcessClient();

            var data = File.OpenRead("<filePath>");

            Response response = await client.ActionsProcessSaveUserActionValueDocumentAsync(Guid.NewGuid(), "<fileContentType>", "<fileName>", Guid.NewGuid(), RequestContent.Create(data));

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ActionsProcessSaveUserActionValueDocument_AllParameters_Async()
        {
            var client = new ProcessClient();

            var data = File.OpenRead("<filePath>");

            Response response = await client.ActionsProcessSaveUserActionValueDocumentAsync(Guid.NewGuid(), "<fileContentType>", "<fileName>", Guid.NewGuid(), RequestContent.Create(data), new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("subject").ToString());
            Console.WriteLine(result.GetProperty("state").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("version").ToString());
            Console.WriteLine(result.GetProperty("processDefinition").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("valid").ToString());
            Console.WriteLine(result.GetProperty("elementValues").GetProperty("<test>")[0].GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("user").GetProperty("email").ToString());
            Console.WriteLine(result.GetProperty("initiator").GetProperty("application").GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("incoming")[0].ToString());
            Console.WriteLine(result.GetProperty("relatedProcess").GetProperty("outcoming")[0].ToString());
            Console.WriteLine(result.GetProperty("objectType").ToString());
            Console.WriteLine(result.GetProperty("createdBy").ToString());
            Console.WriteLine(result.GetProperty("createdAt").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedBy").ToString());
            Console.WriteLine(result.GetProperty("lastModifiedAt").ToString());
        }
    }
}
