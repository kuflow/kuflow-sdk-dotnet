// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace KuFlow.Rest.Models
{
    public partial class RobotSourceFile : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id"u8);
            writer.WriteStringValue(Id);
            writer.WritePropertyName("name"u8);
            writer.WriteStringValue(Name);
            writer.WritePropertyName("contentType"u8);
            writer.WriteStringValue(ContentType);
            writer.WritePropertyName("contentLength"u8);
            writer.WriteNumberValue(ContentLength);
            writer.WritePropertyName("contentHash"u8);
            writer.WriteStringValue(ContentHash);
            writer.WriteEndObject();
        }

        internal static RobotSourceFile DeserializeRobotSourceFile(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Guid id = default;
            string name = default;
            string contentType = default;
            long contentLength = default;
            string contentHash = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("id"u8))
                {
                    id = property.Value.GetGuid();
                    continue;
                }
                if (property.NameEquals("name"u8))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contentType"u8))
                {
                    contentType = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("contentLength"u8))
                {
                    contentLength = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("contentHash"u8))
                {
                    contentHash = property.Value.GetString();
                    continue;
                }
            }
            return new RobotSourceFile(id, name, contentType, contentLength, contentHash);
        }
    }
}
