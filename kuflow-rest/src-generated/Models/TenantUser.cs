// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace KuFlow.Rest.Models
{
    /// <summary> The TenantUser. </summary>
    public partial class TenantUser : AbstractAudited
    {
        /// <summary> Initializes a new instance of <see cref="TenantUser"/>. </summary>
        /// <param name="id"></param>
        /// <param name="principal"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="principal"/> is null. </exception>
        public TenantUser(Guid id, Principal principal)
        {
            Argument.AssertNotNull(principal, nameof(principal));

            Id = id;
            Principal = principal;
        }

        /// <summary> Initializes a new instance of <see cref="TenantUser"/>. </summary>
        /// <param name="objectType"> Audited object Types. </param>
        /// <param name="createdBy"> Who create this model. </param>
        /// <param name="createdAt"> When this model was created. </param>
        /// <param name="lastModifiedBy"> Who was last update this model. </param>
        /// <param name="lastModifiedAt"> When this model type was last updated. </param>
        /// <param name="id"></param>
        /// <param name="metadata"></param>
        /// <param name="principal"></param>
        /// <param name="tenantId"></param>
        internal TenantUser(AuditedObjectType? objectType, Guid? createdBy, DateTimeOffset? createdAt, Guid? lastModifiedBy, DateTimeOffset? lastModifiedAt, Guid id, TenantUserMetadata metadata, Principal principal, Guid? tenantId) : base(objectType, createdBy, createdAt, lastModifiedBy, lastModifiedAt)
        {
            Id = id;
            Metadata = metadata;
            Principal = principal;
            TenantId = tenantId;
        }

        /// <summary> Gets or sets the id. </summary>
        public Guid Id { get; set; }
        /// <summary> Gets or sets the metadata. </summary>
        public TenantUserMetadata Metadata { get; set; }
        /// <summary> Gets or sets the principal. </summary>
        public Principal Principal { get; set; }
        /// <summary> Gets or sets the tenant id. </summary>
        public Guid? TenantId { get; set; }
    }
}
